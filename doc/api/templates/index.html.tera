<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }}</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Theme toggle -->
    <button class="theme-toggle" id="theme-toggle" aria-label="Toggle theme">
        <span class="theme-toggle-icon">🌙</span>
    </button>

    <main class="main-content">
        <div class="content-wrapper">
            <header class="page-header">
                <h1 class="page-title">iceoryx2 API Reference</h1>
                <p class="page-description">Hook into iceoryx2 from any language, interoperate with all languages.</p>
                
                <div class="header-badges">
                    <span class="badge badge-success">{{ languages | length }} Language Bindings</span>
                    <span class="badge badge-info">Zero-Copy</span>
                    <span class="badge badge-secondary">Rust-Powered</span>
                </div>
            </header>

            <!-- Language sections -->
            <div class="language-sections">
                {% for language in languages %}
                <section class="language-section" id="{{ language.name | lower }}">
                    <div class="language-header">
                        <div class="language-icon-wrapper">
                            <span class="language-icon {{ language.className }}">{{ language.icon }}</span>
                        </div>
                        <div class="language-info">
                            <h3 class="language-title">{{ language.name }} Language Bindings</h3>
                            <p class="language-description">
                                {% if language.name == "Python" %}
                                Hook into iceoryx2 systems from Python applications.
                                {% elif language.name == "C++" %}
                                Hook into iceoryx2 systems from C++ applications.
                                {% elif language.name == "C" %}
                                Integrate iceoryx2 into C frameworks.
                                {% endif %}
                            </p>
                        </div>
                    </div>

                    {% if language.versions %}
                    <div class="version-section">
                        <span class="version-label">Available Versions:</span>
                        <div class="version-tags">
                            {% for version in language.versions %}
                            <a href="{{ version.url }}" class="version-tag{% if version.isLatest %} version-tag-latest{% endif %}">
                                <span class="version-name">{{ version.name }}</span>
                                {% if version.isLatest %}
                                <span class="version-latest-badge">Latest</span>
                                {% endif %}
                            </a>
                            {% endfor %}
                        </div>
                    </div>
                    {% else %}
                    <div class="version-section">
                        <div class="no-versions">
                            <span class="no-versions-text">Documentation not yet available</span>
                        </div>
                    </div>
                    {% endif %}
                </section>
                {% endfor %}
            </div>
        </div>
    </main>

    <footer class="page-footer">
        <div class="footer-content">
            <p>Documentation auto-generated on {{ buildDate }}</p>
        </div>
    </footer>

    <script>
        // Theme switching
        const themeToggle = document.getElementById('theme-toggle');
        const html = document.documentElement;
        
        // Get saved theme or default to 'light'
        const currentTheme = (typeof localStorage !== 'undefined' ? localStorage.getItem('theme') : null) || 'light';
        html.setAttribute('data-theme', currentTheme);
        updateThemeIcon(currentTheme);
        
        themeToggle?.addEventListener('click', () => {
            const current = html.getAttribute('data-theme');
            const next = current === 'light' ? 'dark' : 'light';
            html.setAttribute('data-theme', next);
            if (typeof localStorage !== 'undefined') {
                localStorage.setItem('theme', next);
            }
            updateThemeIcon(next);
        });
        
        function updateThemeIcon(theme) {
            const icon = themeToggle?.querySelector('.theme-toggle-icon');
            if (icon) {
                icon.textContent = theme === 'light' ? '🌙' : '☀️';
            }
        }
        
        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({ behavior: 'smooth' });
                }
            });
        });
    </script>
</body>
</html>
